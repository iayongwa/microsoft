# Multi-Stage EXTREPO-ACR-PRC382-Windows pipeline which pulls a Docker image, scans it with Snyk, before pushing image to ACR 

name: $(BuildDefinitionName)_$(date:yyyMMdd)$(rev:.r)

trigger: none
# - master

resources:
  repositories:
   - repository: 'MyGitHubRepo' # Any name you want to give the repo of your source code. This will be used be used in the checkout step.
     type: github
     endpoint: 'GitHub'  # Substitute it with name of the service connection to GitHub or external source
     name: 'iayongwa/microsoft'    # Name of Organization or GitHub user / GitHubrepo name
   # - repository: self

pr: none

# Windows OS self-hosted Agent Pool
pool: 
  name: Selfhosted-IDev-PRC382
  demands:
  - agent.os -equals Windows_NT 

variables:
- group: PRC382-Variables

# Build Stage
stages: 
- stage: PullTag
  displayName: Pull image from GitHub and scan it 
  jobs:
  - job: PullTag
    displayName: Pull image specified in GitHub's Dockerfile, tag it and push it to ACR
    steps:
   # - checkout: self
    - checkout: MyGitHubRepo

    # Pull base Windows image from Docker and 
    - task: CmdLine@2
      displayName: Pull base image from Docker and tag it 
      inputs:
        script: |
          docker pull mcr.microsoft.com/windows/servercore:ltsc2019
          docker tag mcr.microsoft.com/windows/servercore:ltsc2019 $(containerRegistry1)/servercore2019:latest
    
    # Push tagged image to Azure Container Registry (ACR) 
    - task: AzureCLI@2
      displayName: Push tagged image to new ACR repo'
      inputs:
        azureSubscription: $(azureSubscription1)
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          az acr login --name $(containerRegistry1)
          docker images
          docker push $(containerRegistry1)/servercore2019:latest