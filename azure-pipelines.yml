# Multi-Stage pipeline which builds a Docker image, scan it with Snyk, have Snyk report reviewed by security team before pushing image to ACR 

name: $(BuildDefinitionName)_$(date:yyyMMdd)$(rev:.r)

trigger: none
# - master

resources:
- repo: self

pr: none

# Linux OS self-hosted Agent Pool
pool: 
  name: Selfhosted-PRC382-AKS
  demands:
  - agent.os -equals Windows_NT 

variables:
- group: PRC382-Variables

# Build Stage
stages: 
- stage: PullTag
  displayName: Pull image from GitHub and scan it 
  jobs:
  - job: PullScan
    displayName: Pull image from GitHub and scan it
    steps:
    

    # Pull base Windows image, tag it with ACR repo name and move it to Staging Directory for publishing 
    - task: CmdLine@2
      inputs:
        script: |
          docker pull mcr.microsoft.com/windows/servercore:ltsc2019
         # docker tag mcr.microsoft.com/windows/servercore:ltsc2019 $(containerRegistry)/servercore2019:latest
    
      # Push image to Azure Container Registry (ACR) 
    - task: AzureCLI@2
      displayName: 'Tag image and push it to new ACR repo'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          az acr login --name $(containerRegistry)
          docker images
          docker push $(containerRegistry)/servercore2019:latest

#     # Publish image to Staging Directory so that it can be consumed by Deploy Stage
#     - task: PublishBuildArtifacts@1
#       displayName: Publish latest image 
#       inputs:
#         PathtoPublish: $(Build.ArtifactStagingDirectory)
#         ArtifactName: LatestImage
#         Parallel: true
#         ParallelCount: 10

# # Deploy Stage
# - stage: DeployACR
#   displayName: Deploy image to ACR
#   dependsOn: PullTag
#   condition: succeeded()
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy image to ACR
#     environment: DeployACR
#     timeoutInMinutes: 360
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - checkout: none

#           # Download Artifact from Build Stage
#           - download: current
#             artifact: LatestImage
#             displayName: Download artifact containing latest image from Build Stage

#           # Push image to Azure Container Registry (ACR) 
#           - task: AzureCLI@2
#             displayName: 'Tag image and push it to new ACR repo'
#             inputs:
#               azureSubscription: $(azureSubscription)
#               scriptType: ps
#               scriptLocation: inlineScript
#               inlineScript: |
#                 docker images
#                 docker push $(containerRegistry)/mcr.microsoft.com/windows/servercore:ltsc2019
